 finp$="test1.wxr":fout$=finp$+".sdlbas"

'-- WxrToSdlbasicConverter - Paulo Silva - 040429 - GPL
'-- from WxrToWxbConverter
'-- sources should be .wxr files like created from wxWindows Dialog Editor (available from wxMSW-2.2.9 - www.wxwindows.org)

function locstrinfo$(a$,b$,c$)
     adra=1:adrb=1:blngt=len(b$):d$=""
   while adrb<=blngt
     if mid$ (a$,adra,1)=mid$ (b$,adrb,1) Then:adrb+=1:End If
     adra+=1:end while
   while mid$(a$,adra,1)<>left$(c$,1):d$=d$+mid$(a$,adra,1):adra+=1:end while
     locstrinfo$=d$
 end function


'---- source reference from .wxr object kind
  dim ctrlwxw$[15]
'  _______________________________ convertable
    ctrlwxw$[1]="wxButton":ctrlwxw$[2]="wxStaticBox"
    ctrlwxw$[3]="wxTextCtrl":ctrlwxw$[4]="wxComboBox"
    ctrlwxw$[5]="wxGauge"
'  _______________________________ needs xsize fixes
    ctrlwxw$[6]="wxStaticText":ctrlwxw$[7]="wxCheckBox"
    ctrlwxw$[8]="wxRadioButton"
'  _______________________________ wxSlider
    ctrlwxw$[9]="wxSlider"
'  _______________________________ misunderstood
    ctrlwxw$[10]="wxScrollBar":ctrlwxw$[11]="wxListBox"
    ctrlwxw$[12]="wxChoice"
'  _______________________________ makes crashes
    ctrlwxw$[13]="wxRadioBox"

'---- the same about sdlBasic interface.sdlblib
'---- (static box will generate button) - some bugfixes needed surely
  dim ctrlindx$[15]
'  _______________________________ convertable
    ctrlindx$[1]="button":ctrlindx$[2]="button"
    ctrlindx$[3]="textentry":ctrlindx$[4]="combo"
    ctrlindx$[5]="progressbar"
'  _______________________________ needs xsize fixes
    ctrlindx$[6]="label":ctrlindx$[7]="check"
    ctrlindx$[8]="radio"
'  _______________________________ wxSlider
    ctrlindx$[9]="slider"
'  _______________________________ misunderstood
    ctrlindx$[10]="scrollbar":ctrlindx$[11]="listbox"
    ctrlindx$[12]="choice"
'  _______________________________ makes crashes
    ctrlindx$[13]="radiobox"



      yaspect=2:xaspect=1.75
      xsizefix1=3:xfrszfx1=4:yfrszfx1=24:lpz=0
      Open finp$ FOR Input AS 1:Open fout$ FOR OUTPUT AS 2

print #2,"include "+chr$(34)+"interface.sdlblib"+chr$(34)
print #2,"paper(0x777777):cls"

curset=1

  FOR t=0 TO 1: t=0
    IF EOF(1)=0 Then
              file Input #1, text$:text$=Ltrim$(text$)


      If Left$(text$, 5)="style" Then
        style$=locstrinfo$(text$,"'","'")


        file Input #1, text$:text$=Ltrim$(text$)

      If Left$(text$, 5)="title" Then
        title$=locstrinfo$(text$,"'","'")

       end if

          FOR u=0 TO 1: u=0
              file Input #1, text$:text$=Ltrim$(text$)
            IF LEFT$(text$, 1)="x" Then:u=2:End If
          Next

              xpoint$=locstrinfo$(text$,"x=",",")
               xpoint=val(xpoint$):xpoint=int(xpoint*xaspect):xpoint$=str$(xpoint)
              ypoint$=locstrinfo$(text$,"x=y=",",")
               ypoint=val(ypoint$):ypoint=int(ypoint*yaspect):ypoint$=str$(ypoint)
              xsize$=locstrinfo$(text$,"x=y=w=",",")
               xsize=val(xsize$):xsize=int(xsize*xaspect)+xfrszfx1:xsize$=str$(xsize)
              ysize$=locstrinfo$(text$,"x=y=w=h=",",")
               ysize=val(ysize$):ysize=int(ysize*yaspect)+yfrszfx1:ysize$=str$(ysize)
            if lpz<>0 Then:Print#2,"frame.Show(True)":End If
              lpz=1
         xsize=val(xsize$)+xfrszfx1:xsize$=str$(xsize)
          ysize=val(ysize$)+yfrszfx1:ysize$=str$(ysize)


   wxbo$="setnew(0,window,0,"
   wxbo$=wxbo$+xpoint$+","+ypoint$+","+xsize$+","+ysize$+","
   wxbo$=wxbo$+chr$(34)+title$+chr$(34)+")"
         Print#2," ":Print#2,wxbo$


      End If




     IF LEFT$(text$, 7)="control" Then
           wxcontrol$=Ltrim$(locstrinfo$(text$,"=,",","))
           title$=locstrinfo$(text$,"=,,'","'")
           xpoint$= locstrinfo$(text$,"=,,'','','',",",")
            xpoint=val(xpoint$):xpoint=int(xpoint*xaspect):xpoint$=str$(xpoint)
           ypoint$= locstrinfo$(text$,"=,,'','','',,",",")
            ypoint=val(ypoint$):ypoint=int(ypoint*yaspect):ypoint$=str$(ypoint)
           xsize$=locstrinfo$(text$,"=,,'','','',,,",",")
            xsize=val(xsize$):xsize=int(xsize*xaspect):xsize$=str$(xsize)
           ysize$=locstrinfo$(text$,"=,,'','','',,,,",",")
            ysize=val(ysize$):ysize=int(ysize*yaspect):ysize$=str$(ysize)
'__     convertable: wxButton,wxStaticBox,wxTextCtrl,wxComboBox,wxGauge
           for i=1 to 5
             if wxcontrol$=ctrlwxw$[i] Then


wxbo$="setnew("+str$(curset)+","+ctrlindx$[i]+",0,"
wxbo$=wxbo$+xpoint$+","+ypoint$+","+xsize$+","+ysize$+","
wxbo$=wxbo$+chr$(34)+title$+chr$(34)+")"

' wxbo$=      "  control= new "+ctrlindx$[i]+"( panel, -1, "+chr$(34)+title$+chr$(34)
' wxbo$=wxbo$+", wxPoint("+xpoint$+","+ypoint$+"), wxSize("+xsize$+","+ysize$+"))"



               Print#2,wxbo$:curset=curset+1
             End If
           Next
'__      needs xsize fixes: wxStaticText,wxCheckBox,wxRadioButton
           for i=6 to 8
             if wxcontrol$=ctrlwxw$[i] Then
               xsize=val(xsize$)+xsizefix1:xsize$=str$(xsize)
'               wxbo$=      "  control= new "+ctrlindx$[i]+"( panel, -1, "+chr$(34)+title$+chr$(34)
'               wxbo$=wxbo$+", wxPoint("+xpoint$+","+ypoint$+"), wxSize("+xsize$+","+ysize$+"))"

wxbo$="setnew("+str$(curset)+","+ctrlindx$[i]+",0,"
wxbo$=wxbo$+xpoint$+","+ypoint$+","+xsize$+","+ysize$+","
wxbo$=wxbo$+chr$(34)+title$+chr$(34)+")"



               Print#2,wxbo$:curset=curset+1
             End If
           Next
'__      wxSlider
           i=9
             if wxcontrol$=ctrlwxw$[i] Then
'               wxbo$=      "  control= new ctrlindx$[i]( panel, -1, 1 , 1, 100"
'               wxbo$=wxbo$+", wxPoint("+xpoint$+","+ypoint$+"), wxSize("+xsize$+","+ysize$+"))"

wxbo$="setnew("+str$(curset)+","+ctrlindx$[i]+",0,"
wxbo$=wxbo$+xpoint$+","+ypoint$+","+xsize$+","+ysize$+","
wxbo$=wxbo$+chr$(34)+title$+chr$(34)+")"


               Print#2,wxbo$:curset=curset+1
             End If
     End If: End If
    IF EOF(1) <> 0 Then: t=2 : End If
  Next

print#2," "
print#2,"draw "
print#2,"while(0=0)"
print#2,"	waitevent(1)"
print#2,"	if key(27)then"
print#2,"		end"
print#2,"	end if"
print#2,""
print#2,"wend"



  Close #1: Close #2



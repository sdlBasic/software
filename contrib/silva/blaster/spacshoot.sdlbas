setDisplay (640,480,32,1)
SetCaption("Space Ship Battle")
--randomize() seeds the random number generator
randomize()
--screen waits 3 milliseconds before screenswap is called to get rid of that flicker
autoback(-3)

score=0


ShootSound=loadsound("Blaster.wav")

enemyExplosion=loadsound("Boom.wav")

dim player
'colorkey (rgb(0,0,0))
player=loadimage("ship.bmp")
rotateimage(player,-90)

player_slot = 0
player_x = 0
player_y = 220


--"loading the enemies"
dim enemy
dim enemyX[ 1 to 6 ]
dim enemyY[ 1 to 6 ]
dim enemySpeed[ 1 to 6 ]
dim enemyAlive[ 1 to 6 ]

enemy=loadimage("enemy1.png")
--"finish loading the enemies"

dim Enemy_slot[1 to 6]

for esl = 1 to 6
	 Enemy_slot[esl] = esl
	 NumEnemies=Enemy_slot[esl]
	 enemyAlive[esl] = true
next

--"position of the enemies
--I took out the while loop you had in the for loop and simply made all enemyX start out at 640 which is the end of the screen
--and all the enemyY a random number between 10 and 430
--also I added a variable that controls the speed of the enemies, inside the main game loop the speed variable wil change to a
--random number between 2 and 4 each time the enemy reaches the right side of the screen
for i = 1 to 6
enemyX[i]=640
enemyY[i]= int(rnd(420))+10
enemySpeed[i] = rnd(3) + 1
next
--"end of position

--'extra stars position
dim stararr[1 to 100, 1 to 3]

for x = 1 to 100
	stararr[x,1] = int(rnd(640))
	stararr[x,2] = int(rnd(480))
	stararr[x,3] = int(rnd(3)+2)
next
--'end extra stars

--"load the bullets"
--loading the image files for the bullets (pretty self explanatory)
bullet=loadImage("bullet.png")

dim bullet_slot [1 to 30]

for sht = 1 to 30
	bullet_slot[sht] = sht + 6
next
--this makes variables to keep track of each individual bullet
--bullet_x and bullet_y are each bullets position
dim bullet_x[ 1 to 30 ]
dim bullet_y[ 1 to 30 ]
--bullet_direction is the direction each bullet is going so you know which image to draw
--bullet_fired is really not needed because 30 bullets are more than enough for this screen but
--it is good to have it to check to see if a bullet is still on the screen before trying to refire it
dim bullet_fired[ 1 to 30 ]
--index_fired is the number of the next bullet fired
index_fired = 1
--bullet_spacing is the space between each bullet, change it to see what i mean
bullet_spacing = 30

for i = 1 to 30
	bullet_fired[i] = false
next

spean = 0
life = 3
speed = 3

background= loadimage("fundo.bmp")



'main game loop
while (not key(K_ESC)) and (life > 0) and (NumEnemies > 0)

cls()

pasteIcon(0-spean,0,background)
pasteBob(640-spean,0,background)
sprite(player_slot,player_x,player_y,player)

for st = 1 to 100
	stararr[st,1] = (stararr[st,1]-stararr[st,3])
		if stararr[st,1] < 0 then
			stararr[st,1] = stararr[st,1] + 640
		end if
	dot((stararr[st,1]),(stararr[st,2]))
next


if key (K_DOWN) then
player_y=player_y+speed
if (player_y > 420) then
player_y=420

end if
end if

if key (K_UP) then
player_y=player_y-speed
if (player_y < 0) then
   player_y=0
end if
end if

if key (K_RIGHT) then
player_x=player_x+speed
  if (player_x > 580) then
    player_x=580
end if
end if

if key (K_LEFT) then
player_x=player_x-speed
	if (player_x < 0) then
player_x=0
	end if
end if

if key(K_SPACE) then
	if index_fired = 30 then
		index_fired = 1
	end if
	if bullet_fired[index_fired] = false and bullet_spacing >= 30 then
		bullet_x[index_fired] = player_x
		bullet_y[index_fired] = player_y
		bullet_fired[index_fired] = true
		index_fired += 1
		bullet_spacing = 0
		playsound(ShootSound,1)
	end if
end if

--"moving the enemy

for i = 1 to 6
    if enemyX[i] < -60  then
		enemyY[i] = rnd(420) + 10
		enemyX[i] = 640
		enemySpeed[i] = rnd(3) + 1
     else
           enemyX[i] = enemyX[i]-enemySpeed[i]
	end if
 next

 --"stop moving the enemy

 --"display the enemy on screen
for i =1 to 6
	if enemyAlive[i] = true then
		sprite (Enemy_slot[i],enemyX[i],enemyY[i],enemy)
	end if
 next

--"begining fire"
for i = 1 to 30
	if bullet_fired[i] = true then
			sprite(bullet_slot[i],bullet_x[i],bullet_y[i]+12,bullet)
			for j = 1 to 6
				if spriteHit(bullet_slot[i],Enemy_slot[j]) then
				    playsound(enemyExplosion,1)
					enemyAlive[j] = false
					bullet_fired[i] = false
					deletesprite(Enemy_slot[j])
					NumEnemies -=1
					score = score +100
				end if
			next
			bullet_x[i] += 9
		if bullet_x[i] > 630  then
			bullet_fired[i] = false
		end if
		elseif spriteexist(bullet_slot[i]) then
			deletesprite(bullet_slot[i])
		end if
		next
if bullet_spacing < 30 then
bullet_spacing += 1
end if
--"end fire"

ink(rgb(255,0,0))
text(0,5,15,"Score: "&score ,1)
text(100,5,15,"Lives: "&life ,1)
text(200,5,15,"Rounds Fired: "&(index_fired-1) ,1)
text(350,5,15,"Enemies: "&NumEnemies ,1)
ink(rgb(255,255,255))
--"sync

screenswap

--"moving the screen"
spean=spean+1
if spean>=640 then
spean=0
end if
--"end moving the screen"
wend
